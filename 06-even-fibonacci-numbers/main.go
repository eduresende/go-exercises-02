/*

Problem 2

Even Fibonacci numbers

Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million,
find the sum of the even-valued terms.

Answer: 4613732

*/

package main

import "fmt"

func even(number int) bool {
	return (number%2 == 0)
}

func main() {
	sum := 0
	current := 2
	last := 1

	for current < 4000000 {
		newCurrent := current + last

		if even(newCurrent) {
			sum += newCurrent
		}

		last = current
		current = newCurrent
	}

	fmt.Println(sum)
}
